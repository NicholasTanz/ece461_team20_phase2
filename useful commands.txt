**Useful Commands**

---

### **Testing CURL Endpoints**
```bash
npx ts-node src/tests/CURLtests.ts
```

---

### **Cleaning CURL Test Files**
```powershell
Invoke-WebRequest -Uri "http://localhost:3000/cleanup" -Method DELETE
```

---

### **Building and Running the Server**
1. **Build Files**
   ```bash
   npx tsc --build
   ```
2. **Start Server**
   ```bash
   npx ts-node src/run.ts
   ```

---

### **Uploading Packages**

#### **Via Content**
```powershell
Invoke-WebRequest -Uri "http://localhost:3000/sender/package/" `
    -Method POST `
    -ContentType "application/json" `
    -Body @'
{
  "Name": "test-package-content",
  "Version": "1.1.0",
  "Content": "UEsDBAoAAAAAACAfUFkAAAAAAAAAAAAAAAASAAkAdW5kZXJzY29yZS1t",
  "JSProgram": "if (process.argv.length === 7) { console.log(\"Success\"); process.exit(0); } else { console.log(\"Failed\"); process.exit(1); }"
}
'@
```

#### **Via URL**
```powershell
Invoke-WebRequest -Uri "http://localhost:3000/sender/package" `
    -Method POST `
    -ContentType "application/json" `
    -Body '{
  "Name": "test-package-url",
  "Version": "1.0.0",
  "URL": "https://github.com/jashkenas/underscore",
  "JSProgram": "if (process.argv.length === 7) { console.log(\"Success\"); process.exit(0); } else { console.log(\"Failed\"); process.exit(1); }"
}'
```

---

### **Downloading Packages**
```powershell
Invoke-WebRequest -Uri "http://localhost:3000/receiver/download/test-package-content-ver-1-1-0" `
  -OutFile "downloads\test-package-content-1.0.0.zip"
```

---

### **Notes**
- **Always build the project and run the server before testing changes.**