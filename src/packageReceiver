import { Router, Request, Response } from 'express';
import path from 'path';
import fs from 'fs';
import logger from './logger';

const router = Router();
const uploadDir = path.join(__dirname, '../uploads');
const downloadsDir = path.join(__dirname, '../downloads');

// Ensure the downloads directory exists
if (!fs.existsSync(downloadsDir)) {
  fs.mkdirSync(downloadsDir, { recursive: true });
}

router.get('/download', async (req: Request, res: Response) => {
  const packageNames = req.query.packageNames as string | string[];
  const packageList = Array.isArray(packageNames) ? packageNames : [packageNames].filter(Boolean);

  if (packageList.length === 0) {
    return res.status(400).send('No package names provided.');
  }

  const results = await Promise.all(
    packageList.map(async (packageName) => {
      const packagePath = path.join(uploadDir, packageName);
      if (fs.existsSync(packagePath)) {
        const content = fs.readFileSync(packagePath, 'base64');
        return {
          metadata: { Name: packageName, Version: '1.0.0', ID: packageName },
          data: { Content: content }
        };
      } else {
        logger.warn(`Package ${packageName} not found.`);
        return { packageName, status: 'not found' };
      }
    })
  );

  res.json({ results });
});

export default router;
